import React, { useState } from 'react';
import { generateWithClaude } from '../services/claudeApi';
import { scrapeFacebookAds } from '../services/apifyService';

interface CompetitorAd {
  id: string;
  text: string;
  imageUrl?: string;
  videoUrl?: string;
  pageName: string;
  adType: string;
  createdAt: string;
}

const CompetitorAnalysis: React.FC = () => {
  const [isLoading, setIsLoading] = useState(false);
  const [ads, setAds] = useState<CompetitorAd[]>([]);
  const [error, setError] = useState<string | null>(null);
  const [analysis, setAnalysis] = useState<string | null>(null);
  const [pageId, setPageId] = useState('161970940341938');
  const [country, setCountry] = useState('US');
  const [count, setCount] = useState(10);

  const analyzeCompetitors = async () => {
    setIsLoading(true);
    setError(null);
    setAds([]);
    setAnalysis(null);

    try {
      // –°–∫—Ä–∞–ø–∏–º–æ Facebook Ads —á–µ—Ä–µ–∑ Apify
      console.log(`Scraping Facebook Ads for page ${pageId} in ${country}, count: ${count}`);
      const scrapedAds = await scrapeFacebookAds(pageId, country, count);
      setAds(scrapedAds);

      // –ê–Ω–∞–ª—ñ–∑—É—î–º–æ –æ—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ —á–µ—Ä–µ–∑ Claude
      const analysisPrompt = `
        –ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π —Ü—ñ –∫—Ä–µ–∞—Ç–∏–≤–∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ñ–≤ –∑ Facebook Ads:
        
        ${scrapedAds.map((ad, index) => `
        –ö—Ä–µ–∞—Ç–∏–≤ ${index + 1}:
        - –°—Ç–æ—Ä—ñ–Ω–∫–∞: ${ad.pageName}
        - –¢–∏–ø: ${ad.adType}
        - –¢–µ–∫—Å—Ç: ${ad.text}
        - –î–∞—Ç–∞: ${ad.createdAt}
        `).join('\n')}
        
        –ü—Ä–æ–≤–µ–¥–∏ –¥–µ—Ç–∞–ª—å–Ω–∏–π –∞–Ω–∞–ª—ñ–∑:
        1. –¢—Ä–µ–Ω–¥–∏ –≤ –∫—Ä–µ–∞—Ç–∏–≤—ñ (—Å—Ç–∏–ª—å, —Ç–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å, –ø—ñ–¥—Ö–æ–¥–∏)
        2. –í—ñ–∑—É–∞–ª—å–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ (–∫–æ–ª—å–æ—Ä–∏, –∫–æ–º–ø–æ–∑–∏—Ü—ñ—è, —Å—Ç–∏–ª—å)
        3. –ü—Ä–∏–∫–ª–∏–∫–∏ –¥–æ –¥—ñ—ó (CTA, –º–æ—Ç–∏–≤–∞—Ü—ñ—è)
        4. –¶—ñ–ª—å–æ–≤–∞ –∞—É–¥–∏—Ç–æ—Ä—ñ—è (—Ö—Ç–æ –º–æ–∂–µ –±—É—Ç–∏ —Ü—ñ–ª–ª—é)
        5. –£–Ω—ñ–∫–∞–ª—å–Ω—ñ –æ—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ –±—Ä–µ–Ω–¥—É
        6. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–ª—è –Ω–∞—à–æ–≥–æ –±—Ä–µ–Ω–¥—É –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∞–Ω–∞–ª—ñ–∑—É
        
        –ù–∞–¥–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤–ª–∞—Å–Ω–∏—Ö –∫—Ä–µ–∞—Ç–∏–≤—ñ–≤.
      `;

      const analysisResponse = await generateWithClaude(analysisPrompt);
      setAnalysis(analysisResponse);

    } catch (err: any) {
      setError(`–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª—ñ–∑—ñ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ñ–≤: ${err.message}`);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-4">
            üîç –ê–Ω–∞–ª—ñ–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ñ–≤
          </h1>
          <p className="text-lg text-gray-600">
            –ê–Ω–∞–ª—ñ–∑—É–π—Ç–µ –∫—Ä–µ–∞—Ç–∏–≤–∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ñ–≤ –∑ Facebook Ads Library
          </p>
        </div>

        {/* –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∞–Ω–∞–ª—ñ–∑—É */}
        <div className="bg-white rounded-lg shadow-md p-6 mb-8">
          <h2 className="text-xl font-semibold mb-4">–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∞–Ω–∞–ª—ñ–∑—É</h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Page ID
              </label>
              <input
                type="text"
                value={pageId}
                onChange={(e) => setPageId(e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                placeholder="161970940341938"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ö—Ä–∞—ó–Ω–∞
              </label>
              <select
                value={country}
                onChange={(e) => setCountry(e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              >
                <option value="US">–°–®–ê</option>
                <option value="UA">–£–∫—Ä–∞—ó–Ω–∞</option>
                <option value="GB">–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω—ñ—è</option>
                <option value="DE">–ù—ñ–º–µ—á—á–∏–Ω–∞</option>
                <option value="FR">–§—Ä–∞–Ω—Ü—ñ—è</option>
              </select>
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫—Ä–µ–∞—Ç–∏–≤—ñ–≤
              </label>
              <input
                type="number"
                value={count}
                onChange={(e) => setCount(Math.max(10, parseInt(e.target.value) || 10))}
                min="10"
                max="100"
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                placeholder="10"
              />
              <p className="text-xs text-gray-500 mt-1">–ú—ñ–Ω—ñ–º—É–º 10, –º–∞–∫—Å–∏–º—É–º 100</p>
            </div>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –∞–Ω–∞–ª—ñ–∑—É */}
        <div className="text-center mb-8">
          <button
            onClick={analyzeCompetitors}
            disabled={isLoading}
            className="bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white font-bold py-3 px-8 rounded-lg transition duration-200"
          >
            {isLoading ? 'üîÑ –ê–Ω–∞–ª—ñ–∑—É—î–º–æ...' : 'üöÄ –ü–æ—á–∞—Ç–∏ –∞–Ω–∞–ª—ñ–∑'}
          </button>
        </div>

        {/* –ü–æ–º–∏–ª–∫–∞ */}
        {error && (
          <div className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6">
            {error}
          </div>
        )}

        {/* –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∞–Ω–∞–ª—ñ–∑—É */}
        {ads.length > 0 && (
          <div className="bg-white rounded-lg shadow-md p-6 mb-8">
            <h2 className="text-xl font-semibold mb-4">–ó–Ω–∞–π–¥–µ–Ω—ñ –∫—Ä–µ–∞—Ç–∏–≤–∏ ({ads.length})</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {ads.map((ad, index) => (
                <div key={ad.id || index} className="border border-gray-200 rounded-lg p-4">
                  <div className="mb-3">
                    <h3 className="font-semibold text-gray-900">{ad.pageName}</h3>
                    <p className="text-sm text-gray-500">{ad.adType} ‚Ä¢ {ad.createdAt}</p>
                  </div>
                  
                  {ad.imageUrl && (
                    <div className="mb-3">
                      <img 
                        src={ad.imageUrl} 
                        alt="Ad creative" 
                        className="w-full h-32 object-cover rounded"
                      />
                    </div>
                  )}
                  
                  <p className="text-sm text-gray-700">{ad.text}</p>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* –ê–Ω–∞–ª—ñ–∑ */}
        {analysis && (
          <div className="bg-white rounded-lg shadow-md p-6">
            <h2 className="text-xl font-semibold mb-4">–ê–Ω–∞–ª—ñ–∑ –∫—Ä–µ–∞—Ç–∏–≤—ñ–≤</h2>
            <div className="prose max-w-none">
              <pre className="whitespace-pre-wrap text-sm text-gray-700">
                {analysis}
              </pre>
            </div>
          </div>
        )}

        {/* –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó */}
        <div className="bg-blue-50 border border-blue-200 rounded-lg p-6 mt-8">
          <h3 className="text-lg font-semibold text-blue-900 mb-2">
            üí° –Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î
          </h3>
          <ul className="text-blue-800 space-y-2">
            <li>‚Ä¢ –í–≤–µ–¥—ñ—Ç—å Page ID –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞ –∑ Facebook</li>
            <li>‚Ä¢ –û–±–µ—Ä—ñ—Ç—å –∫—Ä–∞—ó–Ω—É –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É</li>
            <li>‚Ä¢ –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–ü–æ—á–∞—Ç–∏ –∞–Ω–∞–ª—ñ–∑"</li>
            <li>‚Ä¢ AI –ø—Ä–æ–∞–Ω–∞–ª—ñ–∑—É—î –∫—Ä–µ–∞—Ç–∏–≤–∏ —Ç–∞ –¥–∞—Å—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó</li>
          </ul>
        </div>
      </div>
    </div>
  );
};

export default CompetitorAnalysis;
