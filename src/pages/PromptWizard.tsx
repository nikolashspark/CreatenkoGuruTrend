import React, { useState } from 'react';

const RAILWAY_API_URL = import.meta.env.VITE_RAILWAY_API_URL || 'http://localhost:3000';

interface PromptResult {
  trendAnalysis: string | null;
  prompts: {
    startingFrame?: string;
    finalFrame?: string;
    klingPrompt?: string;
    explanation?: string;
    raw?: string;
  };
  adsAnalyzed: number;
  mode?: string;
}

const PromptWizard: React.FC = () => {
  const [pageId, setPageId] = useState('');
  const [userIdea, setUserIdea] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [result, setResult] = useState<PromptResult | null>(null);
  const [error, setError] = useState<string | null>(null);

  const generatePrompts = async () => {
    setIsLoading(true);
    setError(null);
    setResult(null);

    try {
      console.log('ü™Ñ Generating Kling prompts for page:', pageId || 'ALL');

      const response = await fetch(`${RAILWAY_API_URL}/api/prompt-wizard/generate`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          pageId: pageId || undefined,
          userIdea: userIdea || undefined
        })
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.message || errorData.error || 'Failed to generate prompts');
      }

      const data = await response.json();
      setResult(data);
      console.log('‚úÖ Prompts generated:', data);

    } catch (err: any) {
      console.error('Prompt generation error:', err);
      setError(err.message);
    } finally {
      setIsLoading(false);
    }
  };

  const copyToClipboard = (text: string, label: string) => {
    navigator.clipboard.writeText(text);
    alert(`${label} —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ!`);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-50 via-blue-50 to-indigo-50 py-8">
      <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Header */}
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-purple-600 to-blue-600 mb-4">
            ü™Ñ Prompt Wizard
          </h1>
          <p className="text-lg text-gray-600">
            –ê–Ω–∞–ª—ñ–∑ —Ç—Ä–µ–Ω–¥—ñ–≤ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ñ–≤ ‚Üí Kling AI –ø—Ä–æ–º–ø—Ç–∏
          </p>
        </div>

        {/* Input Section */}
        <div className="bg-white rounded-xl shadow-lg p-6 mb-8">
          <h2 className="text-xl font-semibold mb-4">üìã –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó</h2>
          
          <div className="space-y-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Page ID (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
              </label>
              <input
                type="text"
                value={pageId}
                onChange={(e) => setPageId(e.target.value)}
                placeholder="161970940341938 –∞–±–æ –∑–∞–ª–∏—à—Ç–µ –ø–æ—Ä–æ–∂–Ω—ñ–º –¥–ª—è –≤—Å—ñ—Ö –∫—Ä–µ–∞—Ç–∏–≤—ñ–≤"
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent"
              />
              <p className="text-xs text-gray-500 mt-1">
                –ó–∞–ª–∏—à—Ç–µ –ø–æ—Ä–æ–∂–Ω—ñ–º —â–æ–± –ø—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –í–°–Ü –∫—Ä–µ–∞—Ç–∏–≤–∏ –∑ Vertex AI –∞–Ω–∞–ª—ñ–∑–∞–º–∏, –∞–±–æ –≤–≤–µ–¥—ñ—Ç—å Page ID –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
              </p>
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –í–∞—à–∞ —ñ–¥–µ—è –∫—Ä–µ–∞—Ç–∏–≤—É
              </label>
              <textarea
                value={userIdea}
                onChange={(e) => setUserIdea(e.target.value)}
                placeholder="–û–ø–∏—à—ñ—Ç—å —Å–≤–æ—é —ñ–¥–µ—é –¥–µ—Ç–∞–ª—å–Ω–æ: —â–æ –ø–æ–∫–∞–∑–∞—Ç–∏, —è–∫–∏–π –µ—Ñ–µ–∫—Ç, —è–∫–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—è...
                
–ü—Ä–∏–∫–ª–∞–¥: –•–æ—á—É –ø–æ–∫–∞–∑–∞—Ç–∏ —è–∫ —Å—Ç–∞—Ä–µ –±–ª—ñ–¥–Ω–µ —Ñ–æ—Ç–æ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î—Ç—å—Å—è –Ω–∞ —è—Å–∫—Ä–∞–≤–µ HD –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è. –°–ø–æ—á–∞—Ç–∫—É —Ç–µ–ª–µ—Ñ–æ–Ω –ª–µ–∂–∏—Ç—å –Ω–∞ —Å—Ç–æ–ª—ñ –∑ –±–ª—ñ–¥–∏–º —Ñ–æ—Ç–æ –Ω–∞ –µ–∫—Ä–∞–Ω—ñ, –ø–æ—Ç—ñ–º –∑'—è–≤–ª—è—î—Ç—å—Å—è –ø—Ä–æ–≥—Ä–µ—Å-–±–∞—Ä, —ñ —Ñ–æ—Ç–æ —Å—Ç–∞—î —è—Å–∫—Ä–∞–≤–∏–º —ñ —á—ñ—Ç–∫–∏–º –∑ –ª–µ–≥–∫–∏–º glow –µ—Ñ–µ–∫—Ç–æ–º."
                rows={6}
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent"
              />
              <p className="text-xs text-gray-500 mt-1">
                üí° –Ø–∫—â–æ –≤–≤–µ–¥–µ—Ç–µ —ñ–¥–µ—é –ë–ï–ó Page ID ‚Üí –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è –±–µ–∑ –∞–Ω–∞–ª—ñ–∑—É —Ç—Ä–µ–Ω–¥—ñ–≤ (—Ä–µ–∂–∏–º 1)
                <br />
                üìä –Ø–∫—â–æ –∑–∞–ª–∏—à–∏—Ç–µ –ø–æ—Ä–æ–∂–Ω—ñ–º ‚Üí –∑–≥–µ–Ω–µ—Ä—É—î—Ç—å—Å—è –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Ç—Ä–µ–Ω–¥—ñ–≤ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ñ–≤ (—Ä–µ–∂–∏–º 2-3)
              </p>
            </div>
          </div>

          <button
            onClick={generatePrompts}
            disabled={isLoading}
            className="mt-6 w-full py-3 px-6 bg-gradient-to-r from-purple-600 to-blue-600 text-white font-semibold rounded-lg shadow-md hover:shadow-lg transform hover:scale-[1.02] transition disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none"
          >
            {isLoading ? '‚è≥ –ì–µ–Ω–µ—Ä—É—î—Ç—å—Å—è...' : 'ü™Ñ –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –ø—Ä–æ–º–ø—Ç–∏'}
          </button>
        </div>

        {/* Error */}
        {error && (
          <div className="bg-red-50 border-l-4 border-red-500 p-4 mb-8 rounded">
            <p className="text-red-700">‚ùå {error}</p>
          </div>
        )}

        {/* Results */}
        {result && (
          <div className="space-y-6">
            {/* Trend Analysis */}
            {result.trendAnalysis && (
              <div className="bg-gradient-to-r from-purple-50 to-blue-50 border border-purple-200 rounded-xl p-6 shadow-lg">
                <h3 className="text-2xl font-bold text-purple-900 mb-3 flex items-center gap-2">
                  üìä –ê–Ω–∞–ª—ñ–∑ —Ç—Ä–µ–Ω–¥—ñ–≤
                  <span className="text-sm font-normal text-gray-600">
                    (–Ω–∞ –æ—Å–Ω–æ–≤—ñ {result.adsAnalyzed} –∫—Ä–µ–∞—Ç–∏–≤—ñ–≤)
                  </span>
                </h3>
                <div className="prose max-w-none">
                  <pre className="text-sm text-gray-800 whitespace-pre-wrap bg-white p-4 rounded-lg shadow-inner max-h-96 overflow-y-auto">
                    {result.trendAnalysis}
                  </pre>
                </div>
              </div>
            )}
            
            {/* Mode indicator */}
            {!result.trendAnalysis && result.adsAnalyzed === 0 && (
              <div className="bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 rounded-xl p-6 shadow-lg">
                <h3 className="text-xl font-bold text-green-900 mb-2">
                  üé® –†–µ–∂–∏–º: –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–∞—à–æ—ó —ñ–¥–µ—ó
                </h3>
                <p className="text-sm text-green-800">
                  –ü—Ä–æ–º–ø—Ç–∏ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω—ñ –ë–ï–ó –∞–Ω–∞–ª—ñ–∑—É —Ç—Ä–µ–Ω–¥—ñ–≤ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ñ–≤ - —Ç—ñ–ª—å–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–∞—à–æ–≥–æ –æ–ø–∏—Å—É
                </p>
              </div>
            )}

            {/* Kling Prompts */}
            {result.prompts.startingFrame && (
              <div className="bg-white rounded-xl shadow-lg overflow-hidden">
                <div className="bg-gradient-to-r from-green-500 to-emerald-500 p-4">
                  <h3 className="text-2xl font-bold text-white">üé¨ Kling AI –ü—Ä–æ–º–ø—Ç–∏</h3>
                </div>

                <div className="p-6 space-y-6">
                  {/* Starting Frame */}
                  <div>
                    <div className="flex items-center justify-between mb-2">
                      <h4 className="text-lg font-semibold text-gray-900">1Ô∏è‚É£ Starting Frame</h4>
                      <button
                        onClick={() => copyToClipboard(result.prompts.startingFrame!, 'Starting Frame')}
                        className="px-3 py-1 text-xs bg-blue-100 text-blue-700 rounded-lg hover:bg-blue-200 transition"
                      >
                        üìã Copy
                      </button>
                    </div>
                    <div className="bg-gray-50 p-4 rounded-lg border border-gray-200">
                      <p className="text-sm text-gray-800">{result.prompts.startingFrame}</p>
                    </div>
                  </div>

                  {/* Final Frame */}
                  <div>
                    <div className="flex items-center justify-between mb-2">
                      <h4 className="text-lg font-semibold text-gray-900">2Ô∏è‚É£ Final Frame</h4>
                      <button
                        onClick={() => copyToClipboard(result.prompts.finalFrame!, 'Final Frame')}
                        className="px-3 py-1 text-xs bg-blue-100 text-blue-700 rounded-lg hover:bg-blue-200 transition"
                      >
                        üìã Copy
                      </button>
                    </div>
                    <div className="bg-gray-50 p-4 rounded-lg border border-gray-200">
                      <p className="text-sm text-gray-800">{result.prompts.finalFrame}</p>
                    </div>
                  </div>

                  {/* Kling Prompt */}
                  <div>
                    <div className="flex items-center justify-between mb-2">
                      <h4 className="text-lg font-semibold text-gray-900">3Ô∏è‚É£ Kling Motion Prompt</h4>
                      <button
                        onClick={() => copyToClipboard(result.prompts.klingPrompt!, 'Kling Prompt')}
                        className="px-3 py-1 text-xs bg-blue-100 text-blue-700 rounded-lg hover:bg-blue-200 transition"
                      >
                        üìã Copy
                      </button>
                    </div>
                    <div className="bg-gradient-to-r from-green-50 to-emerald-50 p-4 rounded-lg border-2 border-green-300">
                      <p className="text-sm text-gray-800 font-medium">{result.prompts.klingPrompt}</p>
                    </div>
                  </div>

                  {/* Explanation */}
                  {result.prompts.explanation && (
                    <div className="bg-blue-50 border-l-4 border-blue-500 p-4 rounded">
                      <h4 className="text-sm font-semibold text-blue-900 mb-1">üí° –ü–æ—è—Å–Ω–µ–Ω–Ω—è</h4>
                      <p className="text-sm text-blue-800">{result.prompts.explanation}</p>
                    </div>
                  )}

                  {/* Raw output (fallback) */}
                  {result.prompts.raw && !result.prompts.startingFrame && (
                    <div className="bg-gray-50 p-4 rounded-lg border border-gray-200">
                      <h4 className="text-sm font-semibold text-gray-700 mb-2">üìù –†–µ–∑—É–ª—å—Ç–∞—Ç</h4>
                      <pre className="text-xs text-gray-800 whitespace-pre-wrap">
                        {result.prompts.raw}
                      </pre>
                    </div>
                  )}

                  {/* Copy All Button */}
                  <button
                    onClick={() => {
                      const allText = `STARTING FRAME:\n${result.prompts.startingFrame}\n\nFINAL FRAME:\n${result.prompts.finalFrame}\n\nKLING PROMPT:\n${result.prompts.klingPrompt}`;
                      copyToClipboard(allText, '–í—Å—ñ –ø—Ä–æ–º–ø—Ç–∏');
                    }}
                    className="w-full py-3 px-6 bg-gradient-to-r from-purple-600 to-blue-600 text-white font-semibold rounded-lg shadow-md hover:shadow-lg transform hover:scale-[1.02] transition"
                  >
                    üìã –°–∫–æ–ø—ñ—é–≤–∞—Ç–∏ –≤—Å—ñ –ø—Ä–æ–º–ø—Ç–∏
                  </button>
                </div>
              </div>
            )}
          </div>
        )}

        {/* Info Box */}
        {!result && !isLoading && (
          <div className="bg-white rounded-xl shadow-lg p-6">
            <h3 className="text-lg font-semibold mb-3">‚ÑπÔ∏è –Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î?</h3>
            <ol className="space-y-2 text-sm text-gray-700">
              <li>1Ô∏è‚É£ <strong>–ó–±–∏—Ä–∞—î–º–æ –∞–Ω–∞–ª—ñ–∑–∏</strong> - –≤–∏—Ç—è–≥—É—î–º–æ –≤—Å—ñ Vertex AI –∞–Ω–∞–ª—ñ–∑–∏ –∫—Ä–µ–∞—Ç–∏–≤—ñ–≤ –∑ –±–∞–∑–∏ (–≤—Å—ñ –∞–±–æ –ø–æ Page ID)</li>
              <li>2Ô∏è‚É£ <strong>–ê–Ω–∞–ª—ñ–∑—É—î–º–æ —Ç—Ä–µ–Ω–¥–∏</strong> - Claude —à—É–∫–∞—î –ø–∞—Ç—Ç–µ—Ä–Ω–∏: –µ–º–æ—Ü—ñ—ó, –±–æ–ª—ñ, —Ö—É–∫–∏, —Å—Ç–∏–ª—ñ</li>
              <li>3Ô∏è‚É£ <strong>–ì–µ–Ω–µ—Ä—É—î–º–æ –ø—Ä–æ–º–ø—Ç–∏</strong> - —Å—Ç–≤–æ—Ä—é—î–º–æ –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω—ñ –ø—Ä–æ–º–ø—Ç–∏ –¥–ª—è Kling AI</li>
              <li>4Ô∏è‚É£ <strong>–ö–æ–ø—ñ—é—î–º–æ</strong> - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≤ Kling –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –≤—ñ–¥–µ–æ</li>
            </ol>
            <div className="mt-4 p-3 bg-blue-50 border border-blue-200 rounded-lg">
              <p className="text-xs text-blue-800">
                üéØ <strong>3 —Ä–µ–∂–∏–º–∏ —Ä–æ–±–æ—Ç–∏:</strong>
              </p>
              <ul className="list-disc list-inside text-xs text-blue-700 mt-2 space-y-1">
                <li><strong>–¢—ñ–ª—å–∫–∏ —ñ–¥–µ—è</strong> - –≤–≤–µ–¥—ñ—Ç—å —Å–≤–æ—é —ñ–¥–µ—é –±–µ–∑ Page ID ‚Üí –ø—Ä–æ–º–ø—Ç–∏ –ë–ï–ó –∞–Ω–∞–ª—ñ–∑—É —Ç—Ä–µ–Ω–¥—ñ–≤</li>
                <li><strong>–í—Å—ñ —Ç—Ä–µ–Ω–¥–∏</strong> - –ø–æ—Ä–æ–∂–Ω—ñ–π Page ID + Vertex AI –∞–Ω–∞–ª—ñ–∑–∏ ‚Üí —Ç—Ä–µ–Ω–¥–∏ –∑ —É—Å—ñ—Ö –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ñ–≤</li>
                <li><strong>–û–¥–∏–Ω –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç</strong> - –≤–∫–∞–∑–∞—Ç–∏ Page ID ‚Üí —Ç—Ä–µ–Ω–¥–∏ —Ç—ñ–ª—å–∫–∏ —Ü—ñ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏</li>
              </ul>
            </div>
            <div className="mt-3 p-3 bg-yellow-50 border border-yellow-200 rounded-lg">
              <p className="text-xs text-yellow-800">
                üí° <strong>–ü–æ—Ä–∞–¥–∞:</strong> –°–ø–æ—á–∞—Ç–∫—É –ø—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π—Ç–µ –∫—Ä–µ–∞—Ç–∏–≤–∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ñ–≤ —á–µ—Ä–µ–∑ Vertex AI –≤ —Ä–æ–∑–¥—ñ–ª—ñ "–ê–Ω–∞–ª—ñ–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ñ–≤"
              </p>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default PromptWizard;
